version: '3.8'

services:
    frontend:
        build:
            context: .
            dockerfile: app/Dockerfile
        environment:
            APP_GQL_ENDPOINT: http://backend:8080/graphql
        ports:
            - "5173:80"
        depends_on:
            - backend

    backend:
        build: ./server
        ports:
            - "8080:8080"
        environment:
            HOSTNAME: ${HOSTNAME}
            CORS_ORIGINS: ${CORS_ORIGINS}
            JWT_SECRET: ${JWT_SECRET}
            AUTH_CALLBACK_URL: ${AUTH_CALLBACK_URL}
            LOGIN_REDIRECT_URL: ${LOGIN_REDIRECT_URL}

            POSTGRES_URL: db:5432/postgres
            POSTGRES_USERNAME: ${POSTGRES_USERNAME}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

            GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
            GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
        depends_on:
            db:
                condition: service_healthy

    db:
        image: postgres
        environment:
            POSTGRES_USER: ${POSTGRES_USERNAME}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: postgres
        healthcheck:
            test: pg_isready -U $$POSTGRES_USER -d postgres
            interval: 3s
            timeout: 30s
            retries: 10
        volumes:
            - dbdata:/var/lib/postgresql/data

volumes:
    dbdata:
